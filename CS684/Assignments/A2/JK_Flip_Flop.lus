node JK_FlipFlop (J, K: bool) returns (Q, nQ: bool);
var nS, nR, CLK : bool;
let
	CLK= false -> not(pre(CLK));
	nS = not(J  and nQ and CLK);
	nR = not(K  and  Q and CLK);
	Q  = false -> not(pre(nS) and nQ);
	nQ = true  -> not(pre(nR) and Q);
tel

node JK_FF (J, K, CLK: bool) returns (Q, nQ: bool);
var Q_prev: bool;
let
	Q_prev	= false -> pre(Q);
	Q	= if (not(CLK and not(false -> pre(CLK)))) then Q_prev
		else if(not J and not K) then Q_prev
		else if (not J and K)	 then false
		else if (J and not K)	 then true
		else			      not Q_prev;
	nQ	= not Q;
tel
